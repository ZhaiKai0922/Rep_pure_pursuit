;; Auto-generated. Do not edit!


(when (boundp 'clean_avoidance::CleanAvoidanceFeedback)
  (if (not (find-package "CLEAN_AVOIDANCE"))
    (make-package "CLEAN_AVOIDANCE"))
  (shadow 'CleanAvoidanceFeedback (find-package "CLEAN_AVOIDANCE")))
(unless (find-package "CLEAN_AVOIDANCE::CLEANAVOIDANCEFEEDBACK")
  (make-package "CLEAN_AVOIDANCE::CLEANAVOIDANCEFEEDBACK"))

(in-package "ROS")
;;//! \htmlinclude CleanAvoidanceFeedback.msg.html


(defclass clean_avoidance::CleanAvoidanceFeedback
  :super ros::object
  :slots (_feedback_x _feedback_y ))

(defmethod clean_avoidance::CleanAvoidanceFeedback
  (:init
   (&key
    ((:feedback_x __feedback_x) 0.0)
    ((:feedback_y __feedback_y) 0.0)
    )
   (send-super :init)
   (setq _feedback_x (float __feedback_x))
   (setq _feedback_y (float __feedback_y))
   self)
  (:feedback_x
   (&optional __feedback_x)
   (if __feedback_x (setq _feedback_x __feedback_x)) _feedback_x)
  (:feedback_y
   (&optional __feedback_y)
   (if __feedback_y (setq _feedback_y __feedback_y)) _feedback_y)
  (:serialization-length
   ()
   (+
    ;; float64 _feedback_x
    8
    ;; float64 _feedback_y
    8
    ))
  (:serialize
   (&optional strm)
   (let ((s (if strm strm
              (make-string-output-stream (send self :serialization-length)))))
     ;; float64 _feedback_x
       (sys::poke _feedback_x (send s :buffer) (send s :count) :double) (incf (stream-count s) 8)
     ;; float64 _feedback_y
       (sys::poke _feedback_y (send s :buffer) (send s :count) :double) (incf (stream-count s) 8)
     ;;
     (if (null strm) (get-output-stream-string s))))
  (:deserialize
   (buf &optional (ptr- 0))
   ;; float64 _feedback_x
     (setq _feedback_x (sys::peek buf ptr- :double)) (incf ptr- 8)
   ;; float64 _feedback_y
     (setq _feedback_y (sys::peek buf ptr- :double)) (incf ptr- 8)
   ;;
   self)
  )

(setf (get clean_avoidance::CleanAvoidanceFeedback :md5sum-) "28b2f4c6bff997642d6c7dab1fe99c89")
(setf (get clean_avoidance::CleanAvoidanceFeedback :datatype-) "clean_avoidance/CleanAvoidanceFeedback")
(setf (get clean_avoidance::CleanAvoidanceFeedback :definition-)
      "# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======
float64 feedback_x
float64 feedback_y


")



(provide :clean_avoidance/CleanAvoidanceFeedback "28b2f4c6bff997642d6c7dab1fe99c89")


